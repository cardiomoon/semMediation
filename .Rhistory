glbwarm
glbwarm$interaction0=glbwarm$negemot*glbwarm$age*glbwarm$sex
glbwarm$interaction1=glbwarm$interaction0
model="ideology ~ a1*negemot+a2*age+a3*sex+a4*negemot:age+a5*negemot:sex+a6*age:sex+a7*interaction0
govact ~ b1*ideology+c1*negemot+c2*age+c3*sex+c4*negemot:age+c5*negemot:sex+c6*age:sex+c7*interaction1
age ~ age.mean*1
age ~~ age.var*age
sex ~ sex.mean*1
sex ~~ sex.var*sex
indirect :=(a1+a4*age.mean+a5*sex.mean)*(b1)
direct :=c1+c4*age.mean+c5*sex.mean
total := direct + indirect
indirect.SDbelow :=(a1+a4*(age.mean-sqrt(age.var))+a5*(sex.mean-sqrt(sex.var)))*(b1)
indirect.SDabove :=(a1+a4*(age.mean+sqrt(age.var))+a5*(sex.mean+sqrt(sex.var)))*(b1)
direct.SDbelow:=c1+c4*(age.mean-sqrt(age.var))+c5*(sex.mean-sqrt(sex.var))
direct.SDabove:=c1+c4*(age.mean+sqrt(age.var))+c5*(sex.mean+sqrt(sex.var))
total.SDbelow := direct.SDbelow + indirect.SDbelow
total.SDabove := direct.SDabove + indirect.SDabove
prop.mediated.SDbelow := indirect.SDbelow / total.SDbelow
prop.mediated.SDabove := indirect.SDabove / total.SDabove
"
library(lavaan)
fit=sem(model=model,data=glbwarm)
glbwarm=read.csv("./inst/pmacro/data/glbwarm.csv",stringsAsFactors = FALSE)
glbwarm$interaction0=glbwarm$negemot*glbwarm$age*glbwarm$sex
model="ideology ~ a1*negemot+a2*age+a3*sex+a4*negemot:age+a5*negemot:sex+a6*age:sex+a7*interaction0
govact ~ b1*ideology+c1*negemot+c2*age+c3*sex+c4*negemot:age+c5*negemot:sex+c6*age:sex+c7*interaction0
age ~ age.mean*1
age ~~ age.var*age
sex ~ sex.mean*1
sex ~~ sex.var*sex
indirect :=(a1+a4*age.mean+a5*sex.mean)*(b1)
direct :=c1+c4*age.mean+c5*sex.mean
total := direct + indirect
indirect.SDbelow :=(a1+a4*(age.mean-sqrt(age.var))+a5*(sex.mean-sqrt(sex.var)))*(b1)
indirect.SDabove :=(a1+a4*(age.mean+sqrt(age.var))+a5*(sex.mean+sqrt(sex.var)))*(b1)
direct.SDbelow:=c1+c4*(age.mean-sqrt(age.var))+c5*(sex.mean-sqrt(sex.var))
direct.SDabove:=c1+c4*(age.mean+sqrt(age.var))+c5*(sex.mean+sqrt(sex.var))
total.SDbelow := direct.SDbelow + indirect.SDbelow
total.SDabove := direct.SDabove + indirect.SDabove
prop.mediated.SDbelow := indirect.SDbelow / total.SDbelow
prop.mediated.SDabove := indirect.SDabove / total.SDabove
"
library(lavaan)
fit=sem(model=model,data=glbwarm)
summary(fit)
runApp('inst/pmacro')
X="negemot";M="ideology";Y="govact";suffix=0
vars=list(name=list(c("W","Z"),c("V","Q")),site=list(c("a","c"),c("b","c")))
seekNameVars(vars,"a")
seekNameVars(vars,"b")
seekNameVars(vars,"c")
vars=list(name=list(c("W","Z"),c("V","Q")),site=list(c("a","c"),c("b","c")))
site="a"
lapply(lapply(vars$site,str_detect,site),any)
unlist(lapply(lapply(vars$site,str_detect,site),any))
which(unlist(lapply(lapply(vars$site,str_detect,site),any)))
site="b"
which(unlist(lapply(lapply(vars$site,str_detect,site),any)))
site="c"
which(unlist(lapply(lapply(vars$site,str_detect,site),any)))
#' select names of variables from list var
#' @param vars A list
#' @param site Site for look kor
#' @export
#' @examples
#' vars=list(name=list(c("W","Z"),c("V","Q")),site=list(c("a","c"),c("b","c")))
#' vars=list(name=list(c("W","Z")),site=list(c("a","c")))
#' seekNameVars(vars,"a")
#' seekNameVars(vars,"b")
#' seekNameVars(vars,"c")
seekNameVars=function(vars,site="a"){
result<-c()
if(!is.null(vars)){
select=which(unlist(lapply(lapply(vars$site,str_detect,site),any)))
result<-select
}
result
}
site="c"
#' select names of variables from list var
#' @param vars A list
#' @param site Site for look kor
#' @export
#' @examples
#' vars=list(name=list(c("W","Z"),c("V","Q")),site=list(c("a","c"),c("b","c")))
#' vars=list(name=list(c("W","Z")),site=list(c("a","c")))
#' seekNameVars(vars,"a")
#' seekNameVars(vars,"b")
#' seekNameVars(vars,"c")
seekNameVars=function(vars,site="a"){
result<-c()
if(!is.null(vars)){
select=which(unlist(lapply(lapply(vars$site,str_detect,site),any)))
result<-select
}
result
}
vars=list(name=list(c("W","Z"),c("V","Q")),site=list(c("a","c"),c("b","c")))
seekNameVars(vars,"a")
seekNameVars(vars,"b")
seekNameVars(vars,"c")
vars=list(name=list(c("W","Z")),site=list(c("a","c")))
seekNameVars(vars,"b")
seekNameVars(vars,"b")
length(seekNameVars(vars,"b"))
vars=list(name=list(c("sex","age")),site=list(c("a","c")))
vars=list(name=list(c("W","Z"),c("V","Q")),site=list(c("a","b","c"),c("a","b","c")))
vars$name[[1]]
source('~/ownCloud/Documents/semMediation/R/tripleInteraction.R', echo=TRUE)
X="negemot";M="ideology";Y="govact";suffix=0
vars=list(name=list(c("sex","age")),site=list(c("a","c")))
cat(tripleEquation(X=X,M=M,Y=Y,vars=vars))
runApp('inst/pmacro')
runApp('inst/pmacro')
res=mtcars
seek=c("hp","wt")
replace=paste0(seek,"rep")
seek
replace
colnames(res)[colnames(res)==seek]=replace
for(i in seq_along(seek)) colnames(res)[colnames(res)==seek[i]]=replace[i]
res
colnames(res)
seek=c("hp","wt")
seek
replace=paste0(seek,"rep")
replace
res=mtcars
colnames(res)
seek=c("hp","wt")
seek
replace=paste0(seek,"rep")
replace
for(i in seq_along(seek)) {
colnames(res)[colnames(res)==seek[i]]=replace[i]
}
colnames(res)
runApp('inst/pmacro')
runApp('inst/pmacro')
fit=lm(mpg~hp*wt+am,data=mtcars)
library(ggiraphExtra)
library(intreactions)
fit=lm(mpg~hp*wt+am,data=mtcars)
fit=lm(mpg~hp*wt+am,data=mtcars)
fit1=lm(mpg~hp*wt+am,data=mtcars)
fit2=lm(mpg~hp*wt+am,data=mtcars)
interact_plot(fit1,pred=hp,modx=wt)
interact_plot(fit2,pred=hp,modx=wt)
fit1=lm(mpg~hp*wt,data=mtcars)
fit2=lm(mpg~hp*wt+cyl,data=mtcars)
interact_plot(fit1,pred=hp,modx=wt)
interact_plot(fit2,pred=hp,modx=wt)
interact_plot(fit1,pred=hp,modx=wt)
interact_plot(fit2,pred=hp,modx=wt)
ggPredict(fit1)
ggPredict(fit2)
fit2=lm(mpg~hp*wt+am,data=mtcars)
fit1=lm(mpg~hp*wt,data=mtcars)
fit2=lm(mpg~hp*wt+am,data=mtcars)
interact_plot(fit1,pred=hp,modx=wt)
interact_plot(fit2,pred=hp,modx=wt)
interact_plot(fit2,pred=hp,modx=wt,mod2=am)
ggPredict(fit2)
interact_plot(fit2,pred=hp,modx=wt,mod2=am)
ggPredict(fit2)
interact_plot(fit2,pred=hp,modx=wt,mod2=am)
ggPredict(fit2)
interact_plot(fit2,pred=hp,modx=wt,mod2=am)
runApp('inst/pmacro')
shiny::runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
fit2=lm(mpg~hp*wt+am,data=mtcars)
summary(fit2)
fit2=lm(mpg~hp*wt+am,data=mtcars)
summary(fit2)
ggPredict(fit2,interavtive=TRUE)
ggPredict(fit2,interactive=TRUE)
library(ggiraphExtra)
library(intractions)
library(interactions)
ggPredict(fit2,interactive=TRUE)
system("grep -r 'relpos' * ")
system("grep -r 'arrows' * ")
system("grep -r 'relpos' * ")
require(ggplot)
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+stat_smooth(method="lm")
require(ggplot2)
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+stat_smooth(method="lm")
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
fit=lm(Sepal.Width~Sepal.Length*Species,data=iris)
summary(fit)
fun=list()
fun[[1]]=function(x){fit$coef[1]+fit$coef[2]*x}
fun[[2]]=function(x){fit$coef[1]+fit$coef[3]+(fit$coef[2]+fit$coef[5])*x}
fun[[3]]=function(x){fit$coef[1]+fit$coef[4]+(fit$coef[2]+fit$coef[6])*x}
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
stat_function(fun=fun[[1]],lty=2)+
stat_function(fun=fun[[2]],lty=2)+
stat_function(fun=fun[[3]],lty=2)
intercept=c(fit$coef[1],fit$coef[1]+fit$coef[3],fit$coef[1]+fit$coef[4])
slope=c(fit$coef[2],fit$coef[2]+fit$coef[5],fit$coef[2]+fit$coef[6])
df=data.frame(intercept,slope)
df
df$label=paste0(round(df$intercept,2),"+",round(df$intercept,2),"* x")
fd
df
df$label=paste0(round(df$intercept,2),"+",round(df$slope,2),"* x")
df
df$label=paste0(round(df$intercept,2),"+",round(df$slope,2),"x")
df
df$radian=atan(df$slope)
df
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
df
df$x=5:7
lapply(1:3,fun,df$x)
lapply(1:3,function(i){fun[[i]](df$x[i])})
df$y=unlist(lapply(1:3,function(i){fun[[i]](df$x[i])}))
df
df
df$angle=df$radian*180/pi
df
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle))+
coord_fixed()
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")+
coord_fixed()
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle,color=1:3))+
coord_fixed()
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")+
coord_fixed()
getratio=function(p){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
(ymax-ymin)/(xmax-min)
}
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
p
getAspectRatio=function(p){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
(ymax-ymin)/(xmax-min)
}
ratio=getAspectRatio(p)
getAspectRatio=function(p){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
(ymax-ymin)/(xmax-xmin)
}
ratio=getAspectRatio(p)
ratio
df
df$radian2=df$radian*ratio
df$angle2=df$radian2*180/pi
df
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
df
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")
df$radian2=df$radian/ratio
df$angle2=df$radian2*180/pi
df
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
df$radian2=df$radian*ratio
df$angle2=df$radian2*180/pi
df
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
p+coord_fixed(ratio=ratio)
ratio=getAspectRatio(p)
ratio
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
p
p+coord_fixed(ratio=1/ratio)
ratio=getAspectRatio(p)
ratio
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
p
ratio=getAspectRatio(p)
ratio
p+coord_fixed(ratio=ratio)
p+coord_fixed(ratio=1/ratio)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
df$radian2=df$radian*ratio
df$angle2=df$radian2*180/pi
df
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
p
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guide(color=NULL)
p
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=NULL)
p
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
ratio=getAspectRatio(p)
ratio
p+coord_fixed()
p+coord_fixed(ratio=ratio)
p+coord_fixed(ratio=1/ratio)
p
p+coord_fixed(ratio=1/ratio)
df
df$radian2=df$radian/ratio
df$angle2=df$radian2*180/pi
df
p+coord_fixed(ratio=1/ratio)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
df$radian2=df$radian*ratio
df$angle2=df$radian2*180/pi
df
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
ratio=getAspectRatio(p)
ratio
df$radian2=df$radian*ratio
df$angle2=df$radian2*180/pi
df
df$radian2=df$radian/ratio
df$angle2=df$radian2*180/pi
df
p+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")+
coord_fixed()
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
getAspectRatio=function(p){
cat("xmin=",xmin,"\n")
cat("xmax=",xmax,"\n")
cat("ymin=",ymin,"\n")
cat("ymax=",ymax,"\n")
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
(ymax-ymin)/(xmax-xmin)
}
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
ratio=getAspectRatio(p)
getAspectRatio=function(p){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
cat("xmin=",xmin,"\n")
cat("xmax=",xmax,"\n")
cat("ymin=",ymin,"\n")
cat("ymax=",ymax,"\n")
(ymax-ymin)/(xmax-xmin)
}
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
ratio=getAspectRatio(p)
ratio
p+coord_fixed(ratio=ratio)
p+coord_fixed(ratio=1/ratio)
p1<-p+coord_fixed(ratio=1/ratio)
getAspectRatio(p1)
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")+
coord_fixed()
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle),color="black")+
coord_fixed(ratio=2)
df
df$slope2=df$slope*2
df$radian2=atan(df$slope2)
df$angle2=df$radian2*180/pi
df
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")+
coord_fixed(ratio=2)
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)+
guides(color=FALSE)
p
ratio=getAspectRatio(p)
ratio
df$slope2=df$slope/ratio
df$radian2=atan(df$slope2)
df$angle2=df$radian2*180/pi
df
p+geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
df$Species=1:3
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2))
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width,color=Species))+
stat_smooth(method="lm",se=FALSE)
p
ratio=getAspectRatio(p)
ratio
df$slope2=df$slope/ratio
df$radian2=atan(df$slope2)
df$angle2=df$radian2*180/pi
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black")
df$vjust=c(0,0,1)
df$vjust=c(0,1,0)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust)
df$vjust=c(-0.1,1.1,-0.1)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust)
df$vjust=c(-0.2,1.2,-0.2)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust)
df$x=c(5,6,7.5)
df$y=unlist(lapply(1:3,function(i){fun[[i]](df$x[i])}))
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust)
df$vjust=c(-1,1.2,-1)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust)
df$vjust=c(-0.5,1.5,-0.5)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust)
df$label=paste0("y==",round(df$intercept,2),"+",round(df$slope,2),"x")
df
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE)
df$label=paste0("italic(y)==",round(df$intercept,2),"+",round(df$slope,2),"italic(x)")
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE)
df$label=paste0("italic(y)==",round(df$intercept,2),"+",round(df$slope,2),"*italic(x)")
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE,family="Times")
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE,family="Times",size=5)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE,family="Times",size=4)
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE,family="Times",size=5)
df$x=c(5,6,7.2)
df$y=unlist(lapply(1:3,function(i){fun[[i]](df$x[i])}))
p+coord_fixed(ratio=1/ratio)+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),color="black",vjust=df$vjust,parse=TRUE,family="Times",size=5)
