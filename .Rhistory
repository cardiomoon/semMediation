relpos=function(p,pos=c(0.5,0.9)){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
x= xmin+(xmax-xmin)*pos[1]
y= ymin+(ymax-ymin)*pos[2]
c(x,y)
}
interact_plot(fit,pred=negemot,modx=age)
interact_plot(fit,pred=negemot,modx=age)
interact_plot(fit,pred="negemot",modx="age")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))
interact_plot(fit,pred="negemot",modx="age")
johnson_neyman(fit,pred=negemot,modx=age)
johnson_neyman(fit,pred="negemot",modx="age")
X="X";M=c("M1","M2","M3");Y=c("Y1","Y2");add2ndMediation=TRUE
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M1","Y1"),"Y2","Y2"))
cat(makeEquation(X,M,Y,covar=covar))
library(semMediation)
cat(makeEquation(X,M,Y,covar=covar))
#'Add line feed to string
#'
#'@param x A string
#'@param ... one or more R objects, to be converted to character vectors.
addLine=function(x,...){
if(x=="") x<-paste0(...)
else x<-paste0(x,"\n",...)
x
}
#'Add `+` mark to string
#'
#'@param x A string
#'@param ... one or more R objects, to be converted to character vectors.
addPlus=function(x,...){
if(x=="") x<-paste0(...)
else x<-paste0(x,"+",...)
x
}
#' Make mediation equations 1
#'
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param stage An integer indicating the order
#' @param start An integer
#' @param add2ndMediation whether or not make a 2nd mediation equation
makeEquation1=function(X,M,stage=1,start=0,add2ndMediation=TRUE){
countX=length(X)
countM=length(M)
equation=""
for(i in 1:countM){
sub=""
for(j in 1:countX){
sub=addPlus(sub,letters[stage],start+(i-1)*countX+j,"*",X[j])
}
if(add2ndMediation &(countM>1)&(i>1)){
sub=addPlus(sub,"d",i-1,"*",M[i-1])
}
temp=paste0(M[i],"~",sub)
equation=addLine(equation,temp)
}
equation
}
#' Make mediation equations 2
#'
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
makeEquation2=function(X,M,Y){
countX=length(X)
countM=length(M)
countY=length(Y)
equation=""
for(i in 1:countY){
temp=makeEquation1(M,Y[i],stage=2,start=(i-1)*countM)
temp
sub=""
for(j in 1:countX){
sub=addPlus(sub,letters[3],(i-1)*countX+j,"*",X[j])
}
temp=addPlus(temp,sub)
equation=addLine(equation,temp)
}
equation
}
#' Make mediation equations 3
#'
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param add2ndMediation whether or not make a 2nd mediation equation
makeEquation3=function(X,M,Y,add2ndMediation=TRUE){
(countX=length(X))
(countM=length(M))
(countY=length(Y))
equation=""
ind=c()
for(k in 1:countY){
for(i in 1:countX) {
for(j in 1:countM) {
noA=(i-1)*countM+j
no=noA+(k-1)*countX*countM
b=((noA-1)%/%countX)+1+(k-1)*countM
#temp=paste0("ind",no,":=a",noA,"*b",b)
#equation=addLine(equation,temp)
ind=c(ind,paste0("a",noA,"*b",b))
temp=paste0("ind",length(ind),":=",ind[length(ind)])
equation=addLine(equation,temp)
}
}
}
equation
secondInd=c()
if(add2ndMediation &(countM>1)){
for(k in 1:countY){
for(j in 2:countM){
equationa=""
for(i in 1:countX){
start=(j-2)*countX
tempa=paste0("a",start+i,"*d",j-1,"*b",j+(k-1)*countM)
equationa=addPlus(equationa,tempa)
}
#temp=paste0("secondInd",(j-1)+(k-1)*(countM-1),":=",equationa)
secondInd=c(secondInd,equationa)
temp=paste0("secondInd",length(secondInd),":=",secondInd[length(secondInd)])
equation=addLine(equation,temp)
}
}
}
equation
thirdInd=c()
if(add2ndMediation &(countM>2)){
for(k in 1:countY){
for(j in 3:countM){
equationa=""
for(i in 1:countX){
start=(j-3)*countX
tempa=paste0("a",start+i,"*d",j-2,"*d",j-1,"*b",j+(k-1)*countM)
equationa=addPlus(equationa,tempa)
}
#temp=paste0("thirdInd",j-2,":=",equationa)
#temp=paste0("thirdInd",(j-2)+(k-1)*(countM-2),":=",equationa)
thirdInd=c(thirdInd,equationa)
temp=paste0("thirdInd",length(thirdInd),":=",thirdInd[length(thirdInd)])
equation=addLine(equation,temp)
}
}
}
equation
## total effect
total=c()
for(k in 1:countY){
# direct effect
direct=paste0("c",seq(1:countX)+(k-1)*countX)
Effect=Reduce(addPlus,direct)
# indirect effect
if(countM>=1){
start=1+(k-1)*length(ind)/countY
end=start+length(ind)/countY-1
indirectEffect=Reduce(addPlus,ind[start:end])
Effect=addPlus(Effect,indirectEffect)
}
# secondIndirect
if(countM>=2){
start=1+(k-1)*length(secondInd)/countY
end=start+length(secondInd)/countY-1
secondIndEffect=Reduce(addPlus,secondInd[start:end])
if(add2ndMediation) Effect=addPlus(Effect,secondIndEffect)
}
# thirdIndirect
if(countM>=3){
start=1+(k-1)*length(thirdInd)/countY
end=start+length(thirdInd)/countY-1
thirdIndEffect=Reduce(addPlus,thirdInd[start:end])
if(add2ndMediation) Effect=addPlus(Effect,thirdIndEffect)
}
temp=paste0("total",k,":=",Effect)
equation=addLine(equation,temp)
}
equation
}
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param add2ndMediation whether or not make a 2nd mediation equation
#' @param covar Optional list of covariates
#' @export
#' @examples
#' X="X";M=c("M1","M2","M3");Y=c("Y1","Y2");add2ndMediation=TRUE
#' covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M1","Y1"),"Y2","Y2"))
#' cat(makeEquation(X,M,Y,covar=covar))
makeEquation=function(X,M,Y,add2ndMediation=TRUE,covar=list()){
# cat("X=",X,"\n")
# cat("M=",M,"\n")
# cat("Y=",Y,"\n")
# cat("str(covar)")
# str(covar)
(countX=length(X))
(countM=length(M))
(countY=length(Y))
if(countX*countM*countY==0) {
equation=" # You need at least one dependent variable(s),\n#one mediation variable(s) and one independent variable(s)."
} else{
temp=makeEquation2(X,M,Y)
temp
temp=addCovarEquation(temp,covar,prefix="g")
equation=paste0("# Mediation Effect\n",temp)
temp=makeEquation1(X,M,add2ndMediation=add2ndMediation)
temp=addCovarEquation(temp,covar,prefix="h")
equation=addLine(equation,temp)
equation=addLine(equation,makeEquation3(X,M,Y,add2ndMediation=add2ndMediation))
}
equation
}
#' Add covariates to equation
#' @param equation The equation
#' @param covar A list
#' @param prefix prefix
addCovarEquation=function(equation,covar=list(),prefix="h"){
temp1=unlist(strsplit(equation,"\n"))
temp1
temp2=strsplit(temp1,"~")
temp2
result=list()
start=1
for(i in 1:length(temp2)){
var=temp2[[i]][1]
temp3=seekVar(covar=covar,var=var,prefix=prefix,start=start)
if(is.null(temp3)){
result[[i]]=paste(var,"~",temp2[[i]][2])
} else {
temp4=paste(temp2[[i]][2],"+",paste(temp3,collapse=" + "))
result[[i]]=paste(var,"~",temp4)
start=start+length(temp3)
}
}
paste(unlist(result),collapse="\n")
}
#' Seek var form covariates
#' @param covar A list of covariates
#' @param var A name of variable to look for
#' @param prefix A prefix
#' @param start A start number
seekVar=function(covar=list(),var,prefix="h",start=1){
temp=c()
if(length(covar$name)>0){
j=start
for(i in 1:length(covar$name)){
# if(!is.null(covar$label[i])) var<-covar$label[i]
if(var %in% covar$site[[i]]){
if(!is.null(prefix)) {
temp=c(temp,paste0(prefix,j,"*",covar$name[i]))
} else{
temp=c(temp,covar$name[i])
}
j=j+1
}
}
}
temp
}
X="X";M=c("M1","M2","M3");Y=c("Y1","Y2");add2ndMediation=TRUE
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M1","Y1"),"Y2","Y2"))
cat(makeEquation(X,M,Y,covar=covar))
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param add2ndMediation whether or not make a 2nd mediation equation
#' @param covar Optional list of covariates
#' @export
#' @examples
#' X="X";M=c("M1","M2","M3");Y=c("Y1","Y2");add2ndMediation=TRUE
#' covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M1","Y1"),"Y2","Y2"))
#' cat(makeEquation(X,M,Y,covar=covar))
makeEquation=function(X,M,Y,add2ndMediation=TRUE,covar=list()){
# cat("X=",X,"\n")
# cat("M=",M,"\n")
# cat("Y=",Y,"\n")
# cat("str(covar)")
# str(covar)
(countX=length(X))
(countM=length(M))
(countY=length(Y))
if(countX*countM*countY==0) {
equation=" # You need at least one dependent variable(s),\n#one mediation variable(s) and one independent variable(s)."
} else{
temp=makeEquation2(X,M,Y)
temp
temp=addCovarEquation(temp,covar,prefix="g")
equation=paste0("# Mediation Effect\n",temp)
temp=makeEquation1(X,M,add2ndMediation=add2ndMediation)
temp=addCovarEquation(temp,covar,prefix="h")
equation=addLine(equation,temp)
equation=addLine(equation,makeEquation3(X,M,Y,add2ndMediation=add2ndMediation))
}
equation
}
temp=makeEquation2(X,M,Y)
temp
X="X";Y="Y"
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
cat(modmedEquation(X=X,M="M",Y=Y,moderator=moderator,range=FALSE,covar=covar))
moderator=list(name=c("Z"),site=list(c("c")))
cat(modmedEquation(X=X,Y=Y,moderator=moderator,range=FALSE))
X="X";M="M";Y="Y"
moderator=list(name=c("Z"),site=list(c("a","c")))
(XM=moderator$name[str_detect2(moderator$site,"a")])
(MY=moderator$name[str_detect2(moderator$site,"b")])
(XY=moderator$name[str_detect2(moderator$site,"c")])
# Regression of Moderator
XM=c(X,XM)
XMstr=interactStr(XM,prefix="a")
XMstr
#'Make regression equation
#' @param X A character vectors indicating independent variables
#' @param M A character vectors indicating mediators
#' @param Y A character vectors indicating dependent variables
#' @param moderator moderator
#' @param covar covariates
#' @examples
#' X="X";M=NULL;Y="Y"; moderator=list(name="W",site=list("c"))
#' regEquation(X,M,Y,moderator)
#' covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
regEquation=function(X="X",M=c("M1","M2"),Y="Y",moderator=list(),covar=list()){
(XM=moderator$name[str_detect2(moderator$site,"a")])
(MY=moderator$name[str_detect2(moderator$site,"b")])
(XY=moderator$name[str_detect2(moderator$site,"c")])
equation=paste0(Y,"~",X)
if(length(XY)>0) {
for(i in 1:length(XY)){
equation=paste0(equation," + ",X,"*",XY[i])
}
}
equation=addCovarEquation(equation,covar=covar,prefix=NULL)
equation
}
X="X";M=NULL;Y="Y"; moderator=list(name="W",site=list("c"))
regEquation(X,M,Y,moderator)
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
regEquation(X,M,Y,moderator,covar)
library(semMediation)
devtools::document()
pmacro
shiny::runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
devtools::document()
devtools::document()
library(semMediation)
devtools::document()
library(semMediation)
devtools::document()
devtools::document()
library(semMediation)
runApp('inst/pmacro')
runApp('inst/pmacro')
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~I(negemot*50)+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~negemot*I(age-50)+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~negemot*I(age-30)+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~negemot*I(age-70)+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
runApp('inst/pmacro')
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))
interact_plot(fit,pred=negemot,modx=age)
library(semMediation)
condEffect(data=mtcars,Y="mpg",X="wt",M="am")
condEffect(data=mtcars,Y="mpg",X="wt",M="hp")
# data=disaster;Y="justify";X="skeptic";M="frame"
# probs=c(0.16,0.5,0.84)
data=mtcars;Y="mpg";X="wt";M="hp";probs=c(0.16,0.5,0.84);showEffect=TRUE
# data=disaster;Y="justify";X="skeptic";M="frame"
# probs=c(0.16,0.5,0.84)
# data=mtcars;Y="mpg";X="wt";M="hp";probs=c(0.16,0.5,0.84);showEffect=TRUE
temp=paste0(Y,"~",X,"*",M)
fit=lm(as.formula(temp),data=data)
if(length(unique(data[[M]]))==2){
fun0=function(x) {fit$coef[1]+fit$coef[2]*x}
fun1=function(x) {fit$coef[1]+fit$coef[3]+(fit$coef[2]+fit$coef[4])*x}
modValues=quantile(data[[X]],probs=probs)
modValues
yhat1=fun0(modValues)
yhat2=fun1(modValues)
effect<-p<-c()
for(i in 1:length(modValues)){
temp1=paste0(Y,"~",M,"*I(",X,"-",modValues[i],")")
fit1=lm(as.formula(temp1),data=data)
effect=c(effect,fit1$coef[2])
p<-c(p,summary(fit1)$coef[2,4])
}
df=data.frame(x=modValues,y0=yhat1,y1=yhat2,effect=effect,p=p)
df$label1=paste0("theta [italic(X) %->% italic(Y)]")
df$label2=paste0("list((italic(W)==",df$x,")==",
sprintf("%4.3f",df$effect),
",italic(p)==",sprintf("%.03f",df$p),")")
df$vjust=ifelse(df$effect>=0,0.2,-0.1)
df
temp=paste0("interact_plot(fit,pred=",X,",modx=",M,")")
temp
p<-interact_plot(fit,pred=X,modx=M)
if(showEffect)
p<-p+ annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,lty=2,color="red",
arrow=arrow(angle=10,length=unit(0.15,"inches"),type="closed"))+
annotate("text",x=df$x,y=df$y1+df$vjust,label=df$label1,parse=TRUE,hjust=1.1,vjust=1)+
annotate("text",x=df$x,y=df$y1+df$vjust,label="|",vjust=1)+
annotate("text",x=df$x,y=df$y1+df$vjust,label=df$label2,parse=TRUE,hjust=-0.01,vjust=1)
} else{
p<-interact_plot(fit,pred=X,modx=M)
}
p
fit
summary(fit)
p<-interact_plot(fit,pred=X,modx=M)
interact_plot(fit,pred=X,modx=M)
X
M
interact_plot(fit,pred=X,modx=M)
temp=paste0("interact_plot(fit,pred=",X,",modx=",M,")")
temp
p<-eval(parse(text=temp))
p
library(semMediation)
condEffect(data=mtcars,Y="mpg",X="wt",M="am")
condEffect(data=mtcars,Y="mpg",X="wt",M="hp")
condEffect(data=mtcars,Y="mpg",X="wt",M="am")
condEffect(data=mtcars,Y="mpg",X="wt",M="hp")
# data=disaster;Y="justify";X="skeptic";M="frame"
# probs=c(0.16,0.5,0.84)
data=mtcars;Y="mpg";X="wt";M="hp";probs=c(0.16,0.5,0.84);showEffect=TRUE
modValues=mean(data[[M]])-c(-1,0,1)*sd(data[[M]])
modValues
modValues=mean(data[[M]])-c(-1,0,1)*sd(data[[M]])
modValues
effect<-p<-c()
for(i in 1:length(modValues)){
temp1=paste0(Y,"~",M,"*I(",X,"-",modValues[i],")")
fit1=lm(as.formula(temp1),data=data)
effect=c(effect,fit1$coef[2])
p<-c(p,summary(fit1)$coef[2,4])
}
modValues=mean(data[[M]])-c(-1,0,1)*sd(data[[M]])
modValues
effect<-p<-c()
i=1
temp1=paste0(Y,"~",M,"*I(",X,"-",modValues[i],")")
fit1=lm(as.formula(temp1),data=data)
summary(fit1)
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
interact_plot(fit,pred=negemot,modx=age)
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit=lm(govact~negemot*I(age-50)+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))
summary(fit,digits=3)
fit1=lm(govact~negemot*I(age-50)+posemot+ideology+sex,data=glbwarm)
summary(fit1,digits=3)
fit1$coef[1]
fit1$coef[2]
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[2]*x},color="red")
fit1=lm(govact~negemot*I(50)+posemot+ideology+sex,data=glbwarm)
fit1=lm(govact~negemot*I(50)+posemot+ideology+sex,data=glbwarm)
fit1=lm(govact~negemot*I(age-50)+posemot+ideology+sex,data=glbwarm)
summary(fit1,digits=3)
fit=lm(govact~negemot*age,data=glbwarm)
summary(fit,digits=3)
fit1=lm(govact~negemot*I(age-50),data=glbwarm)
summary(fit1,digits=3)
fit1$coef[1]
fit1$coef[2]
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[2]*x},color="red")
fit=lm(govact~negemot*age+posemot+ideology+sex,data=glbwarm)
summary(fit,digits=3)
fit1=lm(govact~negemot*I(age-50)+posemot+ideology+sex,data=glbwarm)
summary(fit1,digits=3)
fit1$coef[1]
fit1$coef[2]
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[2]*x},color="red")
summary(fit1,digits=3)
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[2]*x},color="red")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[3]+fit1$coef[2]*x},color="red")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]-fit1$coef[3]+fit1$coef[2]*x},color="red")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[2]*x},color="red")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[7]+fit1$coef[2]*x},color="red")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]-fit1$coef[7]+fit1$coef[2]*x},color="red")
interact_plot(fit,pred=negemot,modx=age,modx.values=c(30,50,70))+
stat_function(fun=function(x) {fit1$coef[1]+fit1$coef[2]*x},color="red")
