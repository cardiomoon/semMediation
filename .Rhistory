arrpos
df=data.frame(no=number,name=name,start=start,end=end,labelpos=labelpos,arrpos=arrpos)
arrows=rbind(arrows,df)
}
arrows
}
#'Adjust y position of nodes
#'@param nodes A data.frame
adjustNodes=function(nodes){
miny=min(nodes$ypos)
if(miny<0.05){
if(miny>=0) {
nodes$ypos=nodes$ypos+0.05
} else{
nodes$ypos=nodes$ypos+0.05-miny
}
}
if(max(nodes$ypos)>0.95) {
nodes$ypos=nodes$ypos*0.95/max(nodes$ypos)
}
nodes
}
#'convert a vextor of names with list
#'@param labels A named list
#'@param names A character vector to look for
findNames=function(labels,names){
result=c()
for(i in 1:length(names)){
result=c(result,findName(labels,names[i]))
}
result
}
#'convert name with list
#'@param labels A named list
#'@param name A name to look for
findName=function(labels,name="MiX"){
if(length(labels)==0) {
result=name
} else if(!is.null(labels[[name]])) {
result=labels[[name]]
} else{
temp=c()
for(i in 1:length(labels)){
grep(names(labels)[i],name)
if(length(grep(names(labels)[i],name))>0) temp=c(temp,labels[[names(labels[i])]])
temp
}
temp
if(length(temp)<1) {
result=name
} else{
result=paste0(temp,collapse=":")
}
}
result
}
#'Adjust x position
#'@param xpos x position
#'@param xmargin horizontal margin of plot
#'@param radx horizontal radius of the box.
adjustxpos=function(xpos,xmargin=0.01,radx=0.12){
ifelse(xpos==0.5,0.5,
ifelse(xpos>0.5,
1-xmargin-radx-(1.0-xpos)*10*(xmargin+2*radx),
xmargin+radx+(xpos)*10*(xmargin+2*radx)))
}
#' @param from coordinates (x,y) of the point *from* which to draw arrow.
#' @param to coordinates (x,y) of the point *to* which to draw arrow.
#' @param label label to display
#' @param no process macro model number
#' @param radx horizontal radius of the box.
#' @param rady vertical radius of the box.
#' @param xmargin horizontal margin of plot
#' @param label.pos label position
#' @param arr.pos arrow position
#' @param ... Further argument to be passed to straightarrow()
myarrow2=function(nodes,from,to,label="",no,radx=0.12,rady=0.04,xmargin=0.01,label.pos=0.5,arr.pos=NULL,...){
#nodes=nodes[nodes$no==no, ]
# from="X";no=1;to="Y";label="66"
xpos=nodes$xpos[nodes$name==from]
xpos=adjustxpos(xpos,xmargin,radx)
ypos=nodes$ypos[nodes$name==from]
start=c(xpos,ypos)
xpos=nodes$xpos[nodes$name==to]
xpos=adjustxpos(xpos,xmargin,radx)
ypos=nodes$ypos[nodes$name==to]
end=c(xpos,ypos)
if(!is.numeric(label)){
if(nchar(label)>1) {
if(nchar(label==3)){
temp1=paste0("expression(",substr(label,1,1),"[",substr(label,2,2),"]","[",substr(label,3,nchar(label)),"])")
} else{
temp2=substr(label,2,nchar(label))
temp2
temp1=paste0("expression(",substr(label,1,1),"[",temp2,"])")
temp1
}
temp=eval(parse(text=temp1))
label=temp
}
}
myarrow(from=start,to=end,label=label,label.pos=label.pos,arr.pos=arr.pos,...)
}
nodes
# Add covariates
nodes=addNodes(nodes,covar,radx=radx,rady=rady)
print(nodes)
no=4.2;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;labels=list()
whatLabel="name"
load("~/Documents/ownCloud/Documents/semMediation/data/arrows.rda")
load("~/Documents/ownCloud/Documents/semMediation/data/nodes.rda")
# no=4.2;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;labels=list()
# whatLabel="name"
nodes=nodes[nodes$no==no, ]
arrows1=arrows[arrows$no==no,]
nodes
# Add covariates
nodes=addNodes(nodes,covar,radx=radx,rady=rady)
print(nodes)
covar=list(name=c("posemot","ideology","sex"),site=list(c("Mi","Y"),c("Mi","Y"),c("Mi","Y")))
library(semMediation)
statisticalDiagram(no=6,covar=covar)
statisticalDiagram(no=6.2,covar=covar)
statisticalDiagram(no=4,covar=covar)
statisticalDiagram(no=6,covar=covar)
statisticalDiagram(no=6.3,covar=covar)
statisticalDiagram(no=8,covar=covar)
library(semMediation)
library(semMediation)
statisticalDiagram(no=4.2,covar=covar)
library(semMediation)
statisticalDiagram(no=4.2,covar=covar)
library(semMediation)
statisticalDiagram(no=4.2,covar=covar)
library(semMediation)
statisticalDiagram(no=4.2,covar=covar)
library(semMediation)
statisticalDiagram(no=4.2,covar=covar)
library(semMediation)
library(semMediation)
statisticalDiagram(no=4.2,covar=covar)
runApp('inst/pmacro')
ggPredict
library(ggiraphExtra)
ggPredict
ggPredict
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
library(semMediation)
runApp('inst/pmacro')
disaster=read.csv("./inst/pmacro/data/disaster.csv",stringsAsFactors = FALSE)
disater
disaster
fit=lm(justify~frame*skeptic,data=disaster)
ggpredict(fit)
ggPredict(fit)
runApp('inst/pmacro')
disaster$skepticp=disaster$skeptic-1.592
disaster$framskpp=disater$frame*disater$skepticp
disaster$skepticp=disaster$skeptic-1.592
disaster$framskpp=disater$frame*disater$skepticp
disaster$skepticp=disaster$skeptic-1.592
disaster$framskpp=disaster$frame*disater$skepticp
disaster$framskpp=disaster$frame*disaster$skepticp
fit1=lm(justify~skepticp*framskpp,data=justify)
summary(fit1)
fit1=lm(justify~skepticp*framskpp,data=disater)
fit1=lm(justify~skepticp*framskpp,data=disaster)
summary(fit1)
disaster$skepticp=disaster$skeptic-1.592
disaster$framskpp=disaster$frame*disaster$skepticp
fit1=lm(justify~frame+skepticp+framskpp,data=disaster)
summary(fit1)
fit1=lm(justify~frame*skepticp,data=disaster)
summary(fit1)
disaster$skepticp=disaster$skeptic-1.592
fit1=lm(justify~frame*skepticp,data=disaster)
summary(fit1)
disaster$skepticp=disaster$skeptic-2.8
fit1=lm(justify~frame*skepticp,data=disaster)
summary(fit1)
disaster$skepticp=disaster$skeptic-5.2
fit1=lm(justify~frame*skepticp,data=disaster)
summary(fit1)
summary(disater$skeptic)
summary(disaster$skeptic)
quantile(disaster$skeptic)
mean(disaster$skeptic)
mean(disaster$skeptic)+c(1,-1)*sd(disaster$skeptic)
quantile(disaster$skeptic,probs=0.16)
quantile(disaster$skeptic,probs=c(0.16,0.5,0.84))
hist(disater$skeptic)
hist(disaster$skeptic)
ggplot(aes(x=skeptic,y=justify,color=frame),data=disaster)+geom_point()
ggplot(aes(x=skeptic,y=justify,color=factor(frame)),data=disaster)+geom_point()+geom_smooth(method="lm")
ggplot(aes(x=skeptic,y=justify,color=factor(frame)),data=disaster)+
geom_point()+
geom_smooth(method="lm",se=FALSE)
ggplot(aes(x=skeptic,y=justify,color=factor(frame)),data=disaster)+
geom_point()+
geom_smooth(method="lm",se=FALSE)+
theme_bw()
ggplot(aes(x=skeptic,y=justify,color=frame),data=disaster)+
geom_point()+
geom_smooth(method="lm",se=FALSE)+
theme_bw()
ggEffect(mtcars,aes(x=wt,y=mpg,color=hp))
ggEffect(disaster,aes(x=skeptic,y=justify,color=frrame))
ggEffect(disaster,aes(x=skeptic,y=justify,color=frame))
ggEffect
ggEffect(justify~skeptic*frame,data=disaster)
skeptic*
ggEffect(justify~frame*skeptic,data=disaster)
ggEffect(justify~frame*skeptic,data=disaster)
ggEffect(justify~skeptic*frame,data=disaster)
ggEffect(justify~skeptic*frame,data=disaster)
runApp('inst/pmacro')
runApp('inst/pmacro')
ggEffect(justify~frame*skeptic,data=disaster,probs=c(0.16,0.5,0.84))
ggEffect(justify~frame*skeptic,data=disaster)
ggEffect(justify~skeptic*frame,data=disaster)
fit=lm(justify~skeptic*frame,data=disaster)
summary(fit)
confint(fit)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
fun1=function(x) 0.20118*x+2.45153
p+stat_function(fun=fun1)
p+stat_function(fun=fun1)+xlim(-5,5)
fun2=function(x) 0.09222208*x+2.15769858
p+stat_function(fun=fun1)+
stat_function(fun=fun2,lty=2)+xlim(-5,5)
install.packages("jtools")
require(jtools)
states <- as.data.frame(state.x77)
fiti <- lm(Income ~ Illiteracy * Murder, data = states)
summ(fiti)
summ(fiti,center=TRUE)
interact_plot(fiti, pred = "Illiteracy", modx = "Murder")
fitiris <- lm(Petal.Length ~ Petal.Width * Species, data = iris)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species")
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
modx.values = c("versicolor", "virginica"))
interact_plot(fiti, pred = "Illiteracy", modx = "Murder", plot.points = TRUE)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
plot.points = TRUE)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
plot.points = TRUE,  point.shape = TRUE)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
plot.points = TRUE,  jitter=0.1,point.shape = TRUE)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
plot.points = TRUE,  point.shape = TRUE)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
plot.points = TRUE,  point.shape = TRUE)
interact_plot(fitiris, pred = "Petal.Width", modx = "Species",
plot.points = TRUE, jitter=0.1, point.shape = TRUE)
fiti <- lm(Income ~ Illiteracy * Murder, data = states,
weights = Population)
interact_plot(fiti, pred = "Illiteracy", modx = "Murder", plot.points = TRUE)
interact_plot(fiti, pred = "Illiteracy", modx = "Murder", interval = TRUE,
int.width = 0.8)
set.seed(99)
x <- rnorm(n = 200, mean = 3, sd = 1)
err <- rnorm(n = 200, mean = 0, sd = 4)
w <- rbinom(n = 200, size = 1, prob = 0.5)
y_1 <- 5 - 4*x - 9*w + 3*w*x + err
model_1 <- lm(y_1 ~ x * w)
summ(model_1)
interact_plot(model_1, pred = "x", modx = "w", linearity.check = TRUE,
plot.points = TRUE)
x_2 <- runif(n = 200, min = -3, max = 3)
y_2 <- 2.5 - x_2^2 - 5*w + 2*w*(x_2^2) + err
data_2 <- as.data.frame(cbind(x_2, y_2, w))
model_2 <- lm(y_2 ~ x_2 * w, data = data_2)
summ(model_2)
interact_plot(model_2, pred = "x_2", modx = "w", linearity.check = TRUE,
plot.points = TRUE)
model_3 <- lm(y_2 ~ poly(x_2, 2) * w, data = data_2)
summ(model_3)
interact_plot(model_3, pred = "x_2", modx = "w", data = data_2)
interact_plot(model_3, pred = "x_2", modx = "w", data = data_2,
linearity.check = TRUE, plot.points = TRUE)
interact_plot(fiti, pred = "Illiteracy", modx = "Murder",
x.label = "Custom X Label", y.label = "Custom Y Label",
main.title = "Sample Plot",  legend.main = "Custom Legend Title",
color.class = "Oranges")
interact_plot(fitiris, pred = "Petal.Width", modx = "Species") + theme_apa()
sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = TRUE)
johnson_neyman(fiti, pred = Illiteracy, modx = Murder, alpha = 0.01)
sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = FALSE)
sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0, 5, 10),
johnson_neyman = FALSE)
ss <- sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0, 5, 10))
plot(ss)
install.packages("ggstance")
plot(ss)
require(ggstance)
ss <- sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0, 5, 10))
library(huxtable)
as_huxtable(ss)
install.packages("huxtable")
library(huxtable)
as_huxtable(ss)
sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = TRUE)
johnson_neyman(fiti, pred = Illiteracy, modx = Murder, alpha = 0.01)
fit=lm(justify~frame*skeptic,data=disaster)
ggPredict(fit)
interact_plot(fit,pred = skeptic,modx=frame)
interact_plot(fit,pred = skeptic,modx=frame,show.point=TRUE)
interact_plot(fit,pred = skeptic,modx=frame,plot.points=TRUE)
interact_plot(fit,pred = skeptic,modx=frame)
interact_plot(fit,pred = skeptic,modx=frame,plot.points=TRUE)
johnson_neyman(fit, pred = skeptic, modx = frame, alpha = 0.01)
johnson_neyman(fit, pred = skeptic, modx = frame, alpha = 0.01)
johnson_neyman(fit, pred = frame, modx = skeptic, alpha = 0.01)
johnson_neyman(fiti, pred = Illiteracy, modx = Murder)
johnson_neyman(fit, pred = frame, modx = skeptic)
johnson_neyman(fit, pred = frame, modx = skeptic,digits=3)
result=johnson_neyman(fit, pred = frame, modx = skeptic,digits=3)
result
str(result    )
str(result)
sim_slopes(fit, pred = skeptic, modx = frame, johnson_neyman = TRUE)
sim_slopes(fit, pred = skeptic, modx = frame, johnson_neyman = TRUE,digits=3)
johnson_neyman(fit, pred = skeptic, modx = frame, alpha = 0.01)
johnson_neyman(fit, pred = frame, modx = skeptic)
sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
result=sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
str(result)
result
sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
result=sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
result
str(result)
class(result)
result=sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
interact_plot(fit,pred = skeptic,modx=frame)
result=sim_slopes(fit, pred = frame, modx = skeptic, johnson_neyman = TRUE,digits=3)
johnson_neyman(fit, pred = frame, modx = skeptic)
johnson_neyman(fit, pred = skeptic, modx = frame)
johnson_neyman(fit, pred = frame, modx = skeptic)
disaster$skepticp=disaster$skeptic-1.592
fit1=lm(justify~frame*skepticp,data=disaster)
summary(fit1)
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
johnson_neyman(fit, pred = frame, modx = skeptic)
johnson_neyman(fit, pred = frame, modx = skeptic)
johnson_neyman(fit, pred = frame, modx = skeptic,plot=FALSE)
result=johnson_neyman(fit, pred = frame, modx = skeptic,plot=FALSE)
str(result)
result=johnson_neyman(fit, pred = frame, modx = skeptic,plot=FALSE)
str(result)
result$bounds
result$cbands
result=johnson_neyman(fit, pred = frame, modx = skeptic,plot=FALSE)
result$bounds
johnson_neyman(fit, pred = frame, modx = skeptic)
str(result$bounds)
johnson_neyman(fit, pred = frame, modx = skeptic)+
annotate("text",x=result$bounds[1],y=-INF,label=round(result$bounds[1]))
johnson_neyman(fit, pred = frame, modx = skeptic)+
annotate("text",x=result$bounds[1],y=-Inf,label=round(result$bounds[1]))
johnson_neyman(fit, pred = frame, modx = skeptic)
johnson_neyman(fit, pred = frame, modx = skeptic)+
annotate("text",x=result$bounds[1],y=-Inf,label=round(result$bounds[1]))
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds[1],y=-Inf,label=round(result$bounds[1]))
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds[1],y=0,label=round(result$bounds[1]))
result=johnson_neyman(fit, pred = frame, modx = skeptic,plot=FALSE)
str(result$bounds)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds[1],y=0,label=round(result$bounds[1]))
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=0,label=round(result$bounds[1]))
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=0,label="1.17")
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17")
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=1,hjust=1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=1,hjust=-1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=0,hjust=-1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=0,hjust=0)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=0.5,hjust=0)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=-0.5,hjust=0)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=-0.5,hjust=0.1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=1.17,y=-Inf,label="1.17",vjust=-0.5,hjust=-0.1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds,y=-Inf,label="1.17",vjust=-0.5,hjust=-0.1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds,y=-Inf,label="1.17",vjust=-0.5,hjust=-0.1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds,y=-Inf,label=result$bounds,vjust=-0.5,hjust=-0.1)
johnson_neyman(fit, pred = frame, modx = skeptic)$plot+
annotate("text",x=result$bounds,y=-Inf,label=round(result$bounds,3),vjust=-0.5,hjust=-0.1)
runApp('inst/pmacro')
fit=lm(justify~frame*skeptic,data=disaster)
quantile(disaster$skeptic)
quantile(disaster$skeptic)
quantile(disaster$skeptic)
quantile(disaster$skeptic,probs=c(0.16,0.5,0.84))
str(quantile(disaster$skeptic,probs=c(0.16,0.5,0.84)))
# data=disaster;Y="justify";X="skeptic";M="frame"
# probs=c(0.16,0.5,0.84)
temp=paste0(Y,"~",X,"*",M)
fit=lm(as.formula(temp),data=data)
# data=disaster;Y="justify";X="skeptic";M="frame"
# probs=c(0.16,0.5,0.84)
temp=paste0(Y,"~",X,"*",M)
data=disaster;Y="justify";X="skeptic";M="frame"
probs=c(0.16,0.5,0.84)
# data=disaster;Y="justify";X="skeptic";M="frame"
# probs=c(0.16,0.5,0.84)
temp=paste0(Y,"~",X,"*",M)
fit=lm(as.formula(temp),data=data)
modValues=quantile(data[[X]],probs=probs)
modValues
summary(fit)
fit$coef[1]
fun0=function(x) {fit$coef[1]+fit$coef[1]*x}
fun1=function(x) {fit$coef[1]+(fit$coef[1]+fit$coef[2]+fit$coef[3])*x}
modValues=quantile(data[[X]],probs=probs)
modValues
yhat1=fun0(modValues)
data.frame(x=modValues,y0=yhat1,y1=yhat2)
yhat1=fun0(modValues)
yhat2=fun1(modValues)
data.frame(x=modValues,y0=yhat1,y1=yhat2)
df=data.frame(x=modValues,y0=yhat1,y1=yhat2)
df
interact_plot(fit,pred = skeptic,modx=frame)
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y1,label=df$y1)
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y0,label=df$y0)
fit=lm(as.formula(temp),data=data)
summary(fit)
fun0=function(x) {fit$coef[1]+fit$coef[1]*x}
fun1=function(x) {fit$coef[1]+fit$coef[3]+(fit$coef[2]+fit$coef[4])*x}
modValues=quantile(data[[X]],probs=probs)
modValues
yhat1=fun0(modValues)
yhat2=fun1(modValues)
df=data.frame(x=modValues,y0=yhat1,y1=yhat2)
df
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y0,label=df$y0)
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y1,label=df$y1)
fun0=function(x) {fit$coef[1]+fit$coef[2]*x}
fun1=function(x) {fit$coef[1]+fit$coef[3]+(fit$coef[2]+fit$coef[4])*x}
modValues=quantile(data[[X]],probs=probs)
modValues
yhat1=fun0(modValues)
yhat2=fun1(modValues)
df=data.frame(x=modValues,y0=yhat1,y1=yhat2)
df
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y1,label=df$y1)
ggplot(aes(x=skeptic,y=justify,color=factor(frame)),data=disaster)+
geom_point()+
geom_smooth(method="lm",se=FALSE)+
theme_bw()
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y1,label=df$y1)
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("text",x=df$x,y=df$y0,label=df$y0)
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow())
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow())
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow(length=0.01,angle=10))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow(length=0.01,angle=10))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow(angle=10))
df
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow(angle=10,lty=2))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,arrow=arrow(angle=10,type="closed"))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,
arrow=arrow(angle=10,length=unit(0.1,"inches"),type="closed"))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,
arrow=arrow(angle=10,type="closed"))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,
arrow=arrow(angle=10,length=unit(0.15,"inches"),type="closed"))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,lty=2,
arrow=arrow(angle=10,length=unit(0.15,"inches"),type="closed"))
interact_plot(fit,pred = skeptic,modx=frame)+
annotate("segment",x=df$x,y=df$y0,xend=df$x,yend=df$y1,lty=2,color="red",
arrow=arrow(angle=10,length=unit(0.15,"inches"),type="closed"))
