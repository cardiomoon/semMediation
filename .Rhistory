} else {
arrows3$label=""
}
# print(arrows3)
drawArrows(arrows3,nodes,xmargin=xmargin,rady=rady,radx=radx)
nodes
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx)
mid=c(xpos,nodes$ypos[i])
# label=ifelse(is.null(labels[[nodes$name[i]]]),nodes$name[i],labels[[nodes$name[i]]])
label=findName(labels,nodes$name[i])
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
}
}
#' Make arrows from estimatesTable
#' @param res A data.frame, result of estimatesTable
est2Arrows=function(res){
no=rep(1.1,nrow(res))
name=paste0("b",1:nrow(res))
start=res$Predictors
end=res$Variables
labelpos=rep(0.5,nrow(res))
arrowpos=rep(0.84,nrow(res))
data.frame(no,name,start,end,labelpos,arrowpos,stringsAsFactors = FALSE)
}
#' Make nodes from estimatesTable
#' @param res A data.frame, result of estimatesTable
est2Nodes=function(res){
res
count=(nrow(res)-1)/2
if(count%%2){
if(count<=2) {
y=seq(from=(0.6+0.2*count),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.56+1.2*count),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
} else{
if(count<=2) {
y=seq(from=(0.5+0.2*count),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.5+1.2*count),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
}
y=c(y,0.5)
x=c(rep(0,count+1),seq(from=0.05,by=0.1,length.out=count),1)
no=rep(1.1,nrow(res)+1)
name=c(res$Predictors,res$Variables[1])
data.frame(no=no,name=name,xpos=x,ypos=y,stringsAsFactors = FALSE)
}
statisticalDiagram(no=1.1,estimateTable=res)
#' Make nodes from estimatesTable
#' @param res A data.frame, result of estimatesTable
est2Nodes=function(res){
res
count=(nrow(res)-1)/2
if(count%%2){
if(count<=2) {
y=seq(from=(0.6+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.56+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
} else{
if(count<=2) {
y=seq(from=(0.5+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.5+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
}
y=c(y,0.5)
x=c(rep(0,count+1),seq(from=0.05,by=0.1,length.out=count),1)
no=rep(1.1,nrow(res)+1)
name=c(res$Predictors,res$Variables[1])
data.frame(no=no,name=name,xpos=x,ypos=y,stringsAsFactors = FALSE)
}
statisticalDiagram(no=1.1,estimateTable=res)
#' Make nodes from estimatesTable
#' @param res A data.frame, result of estimatesTable
est2Nodes=function(res){
res
count=(nrow(res)-1)/2
if(count%%2==1){
if(count<=2) {
y=seq(from=(0.6+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.56+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
} else{
if(count<=2) {
y=seq(from=(0.5+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.5+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
}
y=c(y,0.5)
x=c(rep(0,count+1),seq(from=0.05,by=0.1,length.out=count),1)
no=rep(1.1,nrow(res)+1)
name=c(res$Predictors,res$Variables[1])
data.frame(no=no,name=name,xpos=x,ypos=y,stringsAsFactors = FALSE)
}
#'@importFrom dplyr left_join
#'@export
#'@examples
#'statisticalDiagram(no=1)
#'covar=list(name=c("posemot","ideology","sex"),site=list(c("Y"),c("Y"),c("Y")))
#'statisticalDiagram(no=1,covar=covar)
#'covar=list(name=c("posemot","ideology","sex"),site=list(c("Mi","Y"),c("Mi","Y"),c("Mi","Y")))
#'statisticalDiagram(no=4,covar=covar)
#'statisticalDiagram(no=8,covar=covar)
#'statisticalDiagram(no=1.1,estimateTable=res)
statisticalDiagram=function(no=1,radx=0.10,rady=0.04,xmargin=0.01,arrowlabel=TRUE,
labels=list(),whatLabel="name",estimateTable=NULL,covar=list()){
# no=1.1;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;labels=list()
# whatLabel="est"
# estimateTable=res;
# labels=list()
# covar=list()
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=nodes[nodes$no==no, ]
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=arrows[arrows$no==no,]
}
nodes
# Add covariates
nodes=addNodes(nodes,covar,radx=radx,rady=rady)
print(nodes)
arrows1
covar
arrows2=addArrows(arrows1,covar)
arrows2
# print(arrows)
openplotmat()
if( !is.null(estimateTable)) {
arrows2$Predictors=findNames(labels,arrows2$start)
arrows2$Variables=findNames(labels,arrows2$end)
arrows3<-left_join(arrows2,estimateTable)
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
# print(arrows)
} else{
arrows2$lty=1
arrows3<-arrows2
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
# print(arrows3)
drawArrows(arrows3,nodes,xmargin=xmargin,rady=rady,radx=radx)
nodes
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx)
mid=c(xpos,nodes$ypos[i])
# label=ifelse(is.null(labels[[nodes$name[i]]]),nodes$name[i],labels[[nodes$name[i]]])
label=findName(labels,nodes$name[i])
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
}
}
statisticalDiagram(no=1.1,estimateTable=res)
res
res
count=(nrow(res)-1)/2
count
if(count%%2){
if(count<=2) {
y=seq(from=(0.6+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.56+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
} else{
if(count<=2) {
y=seq(from=(0.5+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.5+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
}
y=c(y,0.5)
y
count
if(count%%2==0){
if(count<=2) {
y=seq(from=(0.6+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.56+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
} else{
if(count<=2) {
y=seq(from=(0.5+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.5+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
}
y=c(y,0.5)
y
statisticalDiagram(no=1.1,estimateTable=res)
res
count=(nrow(res)-1)/2
count
if(count%%2==0){
if(count<=2) {
y=seq(from=(0.6+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.56+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
} else{
if(count<=2) {
y=seq(from=(0.5+0.2*(count-1)),by=-0.2,length.out=count+2)
} else{
y=seq(from=(0.5+1.2*(count-1)),by=-1.2,length.out=count+2)
}
y=c(y,rep(y[length(y)],count-1))
}
y=c(y,0.5)
y
x=c(rep(0,count+1),seq(from=0.05,by=0.1,length.out=count),1)
no=rep(1.1,nrow(res)+1)
name=c(res$Predictors,res$Variables[1])
data.frame(no=no,name=name,xpos=x,ypos=y,stringsAsFactors = FALSE)
source('~/ownCloud/Documents/semMediation/R/statisticalDiagram.R', echo=TRUE)
statisticalDiagram(no=1.1,estimateTable=res)
statisticalDiagram(no=1.1,estimateTable=res,whatLabel="est")
statisticalDiagram(no=1.1,estimateTable=res,whatLabel="std")
protest=read.csv("./inst/pmacro/data/protest.csv",stringsAsFactors = FALSE)
names(protest)
df=protest
catVar=protest
df=protest
catVar="protest"
df=protest
catVar="protest"
is.factor(df[[varname]])
df=protest
varname="protest"
is.factor(df[[varname]])
sort(unique(df[[varname]]))
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
sort(unique(df[[varname]]))
require(moonBook)
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
sort(unique(df[[varname]]))
}
addCatvar(acs,"smoking")
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
sort(unique(df[[varname]]))
}
addCatvar(acs,"smoking")
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
sort(unique(df[[varname]]))
}
addCatVar(acs,"smoking")
df=acs
varname="smoking"
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
str(df[[varanme]])
str(df[[varname]])
sort(unique(df[[varname]]))
str(sort(unique(df[[varname]]))    )
sort(unique(df[[varname]]))
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
str(df[[varname]])
sort(unique(df[[varname]]))
paste0("d",sort(unique(df[[varname]])))
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
str(df[[varname]])
str(df[[varname]])
sort(as.numeric(unique(df[[varname]])))
res=sort(as.numeric(unique(df[[varname]])))
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
str(df[[varname]])
res=sort(as.numeric(unique(df[[varname]])))
for(i in 2:length(res)){
df[[paste0("d",i)]]=ifelse(df[[varname]]==i,1,0)
}
df
}
df1=addCatvar(acs,"smoking")
df1=addCatVar(acs,"smoking")
df1
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) df[[varname]]<-factor(df[[varname]])
str(df[[varname]])
res=sort(as.numeric(unique(df[[varname]])))
for(i in 2:length(res)){
df[[paste0("d",i)]]=ifelse(as.numeric(df[[varname]])==i,1,0)
}
df
}
df1=addCatVar(acs,"smoking")
df1
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) {
df[[varname]]<-factor(df[[varname]])
}
str(df[[varname]])
res=sort(as.numeric(unique(df[[varname]])))
for(i in 2:length(res)){
df[[paste0("d",i)]]=ifelse(as.numeric(df[[varname]])==i,1,0)
}
df
}
df1=addCatVar(acs,"smoking")
df1
require(moonBook)
df1=addCatVar(acs,"smoking")
df1
addCatVar=function(df,varname="protest"){
if(!is.factor(df[[varname]])) {
df[[varname]]<-factor(df[[varname]])
}
res=sort(as.numeric(unique(df[[varname]])))
for(i in 2:length(res)){
df[[paste0("d",i)]]=ifelse(as.numeric(df[[varname]])==i,1,0)
}
df
}
require(moonBook)
acs
df1=addCatVar(acs,"smoking")
df1
#' Add dummy vars to data.frame
#' @param df A data.frame
#' @param varname Variable name to be converted as factor and add dummies
addCatVar=function(df,varname){
if(!is.factor(df[[varname]])) {
df[[varname]]<-factor(df[[varname]])
}
res=sort(as.numeric(unique(df[[varname]])))
for(i in 2:length(res)){
df[[paste0("d",i)]]=ifelse(as.numeric(df[[varname]])==i,1,0)
}
df
}
protest=read.csv("./inst/pmacro/data/protest.csv",stringsAsFactors = FALSE)
names(protest)
addCatVar(protest,"protest")
makeCatInteraction=function(Y="inking",X="protest",W="sexism",data=df,prefix="b"){
count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,W)
no=no+1
for(i in 2:count){
res=c(res,paste0(prefix,no+i,"*d",i,":",W))
}
paste0(Y," ~ ",paste0(res,collapse="+"))
}
makeCatInteraction=function(Y="inking",X=NULL,W="sexism",data=NULL,
count=NULL,prefix="b"){
if(is.null(count)) count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,W)
no=no+1
for(i in 2:count){
res=c(res,paste0(prefix,no+i,"*d",i,":",W))
}
paste0(Y," ~ ",paste0(res,collapse="+"))
}
makeCatInteraction(count=2)
makeCatInteraction(count=3)
makeCatInteraction=function(Y="inking",X=NULL,W="sexism",data=NULL,
count=NULL,prefix="b"){
if(is.null(count)) count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,paste0(prefix,no+1,"*",W))
no=no+1
for(i in 2:count){
res=c(res,paste0(prefix,no+i-1,"*d",i,":",W))
}
paste0(Y," ~ ",paste0(res,collapse="+"))
}
makeCatInteraction(count=3)
makeCatInteraction=function(Y="inking",X=NULL,W="sexism",data=NULL,
count=NULL,prefix="b"){
if(is.null(count)) count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,paste0(prefix,no,"*",W))
for(i in 2:count){
res=c(res,paste0(prefix,no+i-1,"*d",i,":",W))
}
paste0(Y," ~ ",paste0(res,collapse="+"))
}
makeCatInteraction(count=3)
makeCatInteraction=function(Y="inking",X=NULL,W="sexism",data=NULL,
count=NULL,prefix="b"){
if(is.null(count)) count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,paste0(prefix,no,"*",W))
for(i in 2:count){
res=c(res,paste0(prefix,no+i-1,"*d",i,":",W))
}
temp=paste0(Y," ~ ",paste0(res,collapse="+"))
temp=paste0(temp,"\n",W," ~ ",W,".mean*1")
temp=paste0(temp,"\n",W," ~~ ",W,".var*",W)
temp
}
makeCatInteraction(count=3)
cat(makeCatInteraction(count=3))
addCatVar(iris,"Species")
protest=read.csv("./inst/pmacro/data/protest.csv",stringsAsFactors = FALSE)
names(protest)
#'Make interaction equation with dummy categorical variable"
#'@param Y Name of dependent variable
#'@param X Optional.Name of independent variable
#'@param W Name of moderator variable
#'@param data A data.frame
#'@param count length of unique values of independent variable
#'@param prefix A prefix
#'@examples
#'cat(makeCatInteraction(count=3))
makeCatInteraction=function(Y="liking",X=NULL,W="sexism",data=NULL,
count=NULL,prefix="b"){
if(is.null(count)) count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,paste0(prefix,no,"*",W))
for(i in 2:count){
res=c(res,paste0(prefix,no+i-1,"*d",i,":",W))
}
temp=paste0(Y," ~ ",paste0(res,collapse="+"))
temp=paste0(temp,"\n",W," ~ ",W,".mean*1")
temp=paste0(temp,"\n",W," ~~ ",W,".var*",W)
temp
}
cat(makeCatInteraction(Y="Sepal.Length",W="Petal.Length",count=3))
cat(makeCatInteraction(Y="mpg",W="wt",count=3))
cat(makeCatInteraction(Y="mpg",X="cyl",W="wt",data=mtcars))
#'Make interaction equation with dummy categorical variable"
#'@param Y Name of dependent variable
#'@param X Optional.Name of independent variable
#'@param W Name of moderator variable
#'@param data A data.frame
#'@param count length of unique values of independent variable
#'@param prefix A prefix
#'@examples
#'cat(catInteraction(Y="mpg",W="wt",count=3))
#'cat(catInteraction(Y="mpg",X="cyl",W="wt",data=mtcars))
catInteraction=function(Y="liking",X=NULL,W="sexism",data=NULL,
count=NULL,prefix="b"){
if(is.null(count)) count=length(unique(data[[X]]))
no=1
res=c()
for(i in 2:count){
res=c(res,paste0(prefix,i-1,"*d",i))
no=no+1
}
res=c(res,paste0(prefix,no,"*",W))
for(i in 2:count){
res=c(res,paste0(prefix,no+i-1,"*d",i,":",W))
}
temp=paste0(Y," ~ ",paste0(res,collapse="+"))
temp=paste0(temp,"\n",W," ~ ",W,".mean*1")
temp=paste0(temp,"\n",W," ~~ ",W,".var*",W)
temp
}
cat(catInteraction(Y="mpg",W="wt",count=3))
cat(catInteraction(Y="mpg",X="cyl",W="wt",data=mtcars))
addCatVar(mtcars,"cyl")
