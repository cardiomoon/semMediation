geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
ratio=aspectRatio(p)
ratio
df$angle1=(df$angle*ratio)
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle))+
coord_fixed(ratio=ratio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
ratio=aspectRatio(p)
ratio
df$angle1=(df$angle*ratio)
df
df$angle2=df$angle1*180/pi
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2))+
coord_fixed(ratio=ratio)
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
df
df$angle3=ifelse(df$angle2<-2*pi,df$angle2+2*pi)
df
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
ratio=aspectRatio(p)
ratio
df$angle1=(df$angle*ratio)
df$angle2=(df$angle1*180/pi)
df$angle3=ifelse(df$angle2<-2*pi,df$angle2+2*pi)
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle))+
coord_fixed(ratio=ratio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2))+
coord_fixed(ratio=ratio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle3))+
coord_fixed(ratio=ratio)
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
df$angle1=(df$angle*ratio)
df$angle2=(df$angle1*180/pi)
df$angle3=ifelse(df$angle2<-2*pi,df$angle2+2*pi)
df
ratio=aspectRatio(p)
ratio
df$angle1=(df$angle/ratio)
df$angle2=(df$angle1*180/pi)
df$angle3=ifelse(df$angle2<-2*pi,df$angle2+2*pi)
df
df$angle3=ifelse(df$angle2>2*pi,df$angle2-2*pi)
df
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
ratio=aspectRatio(p)
ratio
df$angle1=(df$angle/ratio)
df
df$angle2=(df$angle1*180/pi)
df
df$angle3=ifelse(df$angle2<-2*pi,df$angle2+2*pi)
df
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
df$angle1=(df$angle/ratio)
df$angle2=(df$angle1*180/pi)
df
df$angle2=ifelse(df$angle1<-2*pi,df$angle1+2*pi)
df
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
df$angle1=(df$angle/ratio)
df$angle2=ifelse(df$angle1<-2*pi,df$angle1+2*pi)
df
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
df$angle1=(df$angle/ratio)
df$angle2=(df$angle1*180/pi)
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle))+
coord_fixed(ratio=ratio)
df
df$angle3=df$angle2%%360
df
df$angle3=df$angle2+360*1:2
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle3))+
coord_fixed(ratio=ratio)
fit=lm(mpg~wt*am,data=mtcars)
summary(fit)
fun=list()
fun[[1]]=function(x){31.4161-3.7859*x}
fun[[2]]=function(x){31.4161+14.8784-(3.7859+5.2984)*x}
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
df$angle1=(df$angle*180/pi)
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed()
ratio=aspectRatio(p)
ratio
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=raio)
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle1))+
coord_fixed(ratio=ratio)
df
ratio
45*pi/180
45*pi/180*0.5
atan(45*pi/180*0.5)
45*pi/180
df
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
angle=c(atan(fit$coef[2]),atan(fit$coef[2]+fit$coef[4]))
label=paste0("am=",0:1)
df=data.frame(x,y,angle,label,stringsAsFactors = FALSE)
df
df
ratio=aspectRatio(p)
ratio
df$angle1=(df$angle*180/pi)
df
ratio
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df
af$angle2=df$slope2*180/pi
df$angle2=df$slope2*180/pi
df
ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2))+
coord_fixed(ratio=ratio)
getAspectRatio=function(p){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
(xmax-xmin)/(ymax-ymin)
}
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
p
ratio=getAspectRatio(p)
getAspectRatio=function(p){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
(xmax-xmin)/(ymax-ymin)
}
ratio=getAspectRatio(p)
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2))+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=0)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=-0.2)+
coord_fixed(ratio=ratio)
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
ratio=getAspectRatio(p)
x=c(2.5,4.5)
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
df
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=-0.2)+
coord_fixed(ratio=ratio)
relxpos=function(p,pos=c(0.5)){
xmin=layer_scales(p)$x$range$range[1]
xmax=layer_scales(p)$x$range$range[2]
xmin+(xmax-xmin)*pos
}
relypos=function(p,pos=c(0.5)){
ymin=layer_scales(p)$y$range$range[1]
ymax=layer_scales(p)$y$range$range[2]
ymin+(ymax-ymin)*pos
}
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
x=c(relxpos(p,1/5),relxpos(p,4/5))
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=-0.2)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)+
coord_fixed(ratio=ratio)
fit=lm(mpg~wt*am,data=mtcars)
summary(fit)
fit=lm(mpg~wt*am,data=mtcars)
summary(fit)
fun=list()
fun[[1]]=function(x){fit$coef[1]+fit$coef[2]*x}
fun[[2]]=function(x){fit$coef[1]+fit$coef[3]+(fit$coef[2]+fit$coef[4])*x}
x=c(relxpos(p,1/5),relxpos(p,4/5))
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
ratio=getAspectRatio(p)
x=c(relxpos(p,1/5),relxpos(p,4/5))
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
ratio=getAspectRatio(p)
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])+
coord_fixed(ratio=ratio)
ratio=getAspectRatio(p)
x=c(relxpos(p,1/5),relxpos(p,4/5))
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)
ratio = 1/2   ### set to the desired fixed aspect ratio
d <- data.frame(xmin=c(0,0,0), xmax=c(50,100,100), ymin=c(0,0,0), ymax=c(100,100,50), annotation=c("slope 1/2","slope 1","slope 2"))
ggplot(data=d, mapping=aes(x=xmin, xend=xmax, y=ymin, yend=ymax, label=annotation)) + geom_segment() + geom_text(mapping=aes(x=(xmax-xmin)/2,y=(ymax-ymin)/2, angle=atan2((ymax-ymin)*ratio,(xmax-xmin))*180/pi), vjust=-0.5) + coord_fixed(ratio=ratio)
ratio = 1/2   ### set to the desired fixed aspect ratio
d <- data.frame(xmin=c(0,0,0), xmax=c(50,100,100), ymin=c(0,0,0), ymax=c(100,100,50), annotation=c("slope 1/2","slope 1","slope 2"))
d
p<-ggplot(data=mtcars,aes(x=wt,y=mpg))+
stat_function(fun=fun[[1]])+
stat_function(fun=fun[[2]])
ratio=getAspectRatio(p)
x=c(relxpos(p,1/5),relxpos(p,4/5))
y=c(fun[[1]](x[1]),fun[[2]](x[2]))
slope=c(fit$coef[2],fit$coef[2]+fit$coef[4])
label=paste0("am=",0:1)
df=data.frame(x,y,slope,label,stringsAsFactors = FALSE)
df
summary(fit)
df$slope2=df$slope*ratio
df$angle2=df$slope2*180/pi
df
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.2)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)+
coord_fixed(ratio=ratio)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.2)
p+  geom_text(data=df,aes(x=x,y=y,label=label,angle=angle2),vjust=1.1)+
coord_fixed(ratio=ratio)
shiny::runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
shiny::runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
caskets=read.csv("./data/caskets.csv",stringsAsFactors = FALSE)
caskets=read.csv(".inst/pmacro/data/caskets.csv",stringsAsFactors = FALSE)
caskets=read.csv("./inst/pmacro/data/caskets.csv",stringsAsFactors = FALSE)
caskets
fit=lm(interset~age*ploicy,data=casktes)
fit=lm(interset~age*ploicy,data=caskets)
fit=lm(interest~age*ploicy,data=caskets)
fit=lm(interest~age*policy,data=caskets)
summary(fit)
interact_plot(fit,pred=age,modx=policy)
interact_plot(fit,pred=policy,modx=age)
johnson_neyman(fit,pred=age,modx=policy)
johnson_neyman(fit,pred=policy,modx=age)
johnson_neyman(fit,pred=age,modx=policy)
johnson_neyman(fit,pred=policy,modx=age)
johnson_neyman(fit,pred=policy,modx=age,plot=FALSE)
johnson_neyman(fit,pred=policy,modx=age)
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
library(semMediation)
runApp('inst/pmacro')
fit=lm(formula = Sepal.Length ~ Species * Sepal.Width, data = iris)
summary(fit)
interact_plot(fit,pred=Species,modx=Sepal.Width)
interact_plot(fit,modx=Species,pred=Sepal.Width)
runApp('inst/pmacro')
runApp('inst/pmacro')
runApp('inst/pmacro')
fit=lm(formula = Sepal.Length ~ Species * Sepal.Width, data = iris)
summary(fit)
fit=lm(formula = Sepal.Length ~ Species * Sepal.Width, data = iris)
summary(fit)
interact_plot(fit,pred=Species,modx=Sepal.Width)
interact_plot(fit,modx=Species,pred=Sepal.Width)
johnson_neyman(fit,modx=Species,pred=Sepal.Width)
johnson_neyman(fit,pred=Species,modx=Sepal.Width)
%nin%
library(jtools)
library(interactions)
??%nin%
runApp('inst/pmacro')
runApp('inst/pmacro')
library(flextable)
ft <- flextable( head( iris ) )
ft
ft <- set_header_df( ft, mapping = typology, key = "col_keys" )
typology <- data.frame(
col_keys = c( "Sepal.Length",
"Sepal.Width", "Petal.Length",
"Petal.Width", "Species" ),
type = c("double", "double", "double",
"double", "factor"),
what = c("Sepal", "Sepal", "Petal",
"Petal", "Species"),
measure = c("Length", "Width", "Length",
"Width", "Species"),
stringsAsFactors = FALSE )
ft <- flextable( head( iris ) )
ft
ft <- set_header_df( ft, mapping = typology, key = "col_keys" )
ft
ft <- set_header_df( ft, mapping = typology, key = "col_keys" )
ft
ft <- merge_h(ft, part = "header")
ft
ft <- merge_v(ft, part = "header")
ft
install.packages("flextable")
install.packages("flextable")
install.packages("flextable")
install.packages("flextable")
install.packages("flextable")
install.packages("flextable")
install.packages("flextable")
install.packages("flextable")
library(flextable)
typology <- data.frame(
col_keys = c( "Sepal.Length",
"Sepal.Width", "Petal.Length",
"Petal.Width", "Species" ),
type = c("double", "double", "double",
"double", "factor"),
what = c("Sepal", "Sepal", "Petal",
"Petal", "Species"),
measure = c("Length", "Width", "Length",
"Width", "Species"),
stringsAsFactors = FALSE )
ft <- flextable( head( iris ) )
ft
ft
ft <- set_header_df( ft, mapping = typology, key = "col_keys" )
ft
ft <- merge_h(ft, part = "header")
ft
ft <- merge_v(ft, part = "header")
ft
library(flextable)
typology <- data.frame(
col_keys = c( "Sepal.Length",
"Sepal.Width", "Petal.Length",
"Petal.Width", "Species" ),
type = c("double", "double", "double",
"double", "factor"),
what = c("Sepal", "Sepal", "Petal",
"Petal", "Species"),
measure = c("Length", "Width", "Length",
"Width", "Species"),
stringsAsFactors = FALSE )
ft <- flextable( head( iris ) )
ft
ft <- set_header_df( ft, mapping = typology, key = "col_keys" )
ft <- merge_h(ft, part = "header")
ft <- merge_v(ft, part = "header")
